{
  "address": "0x803289AE405b9Aeb6AABbf27c9Bc3e7333143844",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "__name",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "_name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mockValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "peekSpot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rate",
          "type": "uint256"
        }
      ],
      "name": "setRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x5fecff1953d4e39b179836077fbff1e7d0adb30534db485ee43918912cb65a17",
  "receipt": {
    "to": null,
    "from": "0xEAF9f533871B07B151883908B4Fb6eeF4b51A95F",
    "contractAddress": "0x803289AE405b9Aeb6AABbf27c9Bc3e7333143844",
    "transactionIndex": 1,
    "gasUsed": "733899",
    "logsBloom": "0x
    "blockHash": "0x4aa0b82d2c8832e31deb717a4295fc3f9c85a558e864aa4ba86042da9fbdb71f",
    "transactionHash": "0x5fecff1953d4e39b179836077fbff1e7d0adb30534db485ee43918912cb65a17",
    "logs": [],
    "blockNumber": 9992763,
    "cumulativeGasUsed": "733899",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "WETHMOracle"
  ],
  "numDeployments": 1,
  "solcInputHash": "be302bf05c20a38914ceb30222d1e815",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"__name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"peekSpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"get(bytes)\":{\"returns\":{\"_rate\":\"The rate of the requested asset / pair / pool.\",\"success\":\"if no valid (recent) rate is available, return false else true.\"}},\"name(bytes)\":{\"returns\":{\"_0\":\"(string) A human readable name about this oracle.\"}},\"peek(bytes)\":{\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\",\"success\":\"if no valid (recent) rate is available, return false else true.\"}},\"peekSpot(bytes)\":{\"returns\":{\"rate\":\"The rate of the requested asset / pair / pool.\"}},\"symbol(bytes)\":{\"returns\":{\"_0\":\"(string) A human readable symbol name about this oracle.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"get(bytes)\":{\"notice\":\"Get the latest exchange rate. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"name(bytes)\":{\"notice\":\"Returns a human readable name about this oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"peek(bytes)\":{\"notice\":\"Check the last exchange rate without any state changes. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"peekSpot(bytes)\":{\"notice\":\"Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek(). For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"},\"symbol(bytes)\":{\"notice\":\"Returns a human readable (short) name about this oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/options/mocks/OracleMock.sol\":\"OracleMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOracle {\\n    /// @notice Get the latest exchange rate.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function get(bytes calldata data) external returns (bool success, uint256 rate);\\n\\n    /// @notice Check the last exchange rate without any state changes.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peek(bytes calldata data) external view returns (bool success, uint256 rate);\\n\\n    /// @notice Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\n\\n    /// @notice Returns a human readable (short) name about this oracle.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable symbol name about this oracle.\\n    function symbol(bytes calldata data) external view returns (string memory);\\n\\n    /// @notice Returns a human readable name about this oracle.\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable name about this oracle.\\n    function name(bytes calldata data) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x1a78dffb37b3f6a3577bf08f8d5ab4200224d864179e6ab8aa73f08f01eb6a0d\",\"license\":\"MIT\"},\"contracts/options/mocks/OracleMock.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\n\\nimport '../../interfaces/IOracle.sol';\\n\\ncontract OracleMock is IOracle {\\n    uint256 public mockValue;\\n    string public _name;\\n\\n    constructor(string memory __name) {\\n        _name = __name;\\n    }\\n\\n    function setRate(uint256 _rate) external {\\n        mockValue = _rate;\\n    }\\n\\n    /// @notice Get the latest exchange rate.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return _rate The rate of the requested asset / pair / pool.\\n    function get(bytes calldata) external view returns (bool success, uint256 _rate) {\\n        return (true, mockValue);\\n    }\\n\\n    /// @notice Check the last exchange rate without any state changes.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return success if no valid (recent) rate is available, return false else true.\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peek(bytes calldata) external view returns (bool success, uint256 rate) {\\n        return (true, mockValue);\\n    }\\n\\n    /// @notice Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return rate The rate of the requested asset / pair / pool.\\n    function peekSpot(bytes calldata) external view returns (uint256 rate) {\\n        return mockValue;\\n    }\\n\\n    /// @notice Returns a human readable (short) name about this oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable symbol name about this oracle.\\n    function symbol(bytes calldata) external pure returns (string memory) {\\n        return 'ORCM';\\n    }\\n\\n    /// @notice Returns a human readable name about this oracle.\\n    /// For example:\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\n    /// @return (string) A human readable name about this oracle.\\n    function name(bytes calldata) external view returns (string memory) {\\n        return _name;\\n    }\\n}\\n\",\"keccak256\":\"0xa7400df83d6782d73fa129536a8ef3ccec36b1b648c02ca4a4aee52c3d6a91d4\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516105ce3803806105ce83398101604081905261002f916100f8565b8051610042906001906020840190610049565b5050610202565b828054610055906101c7565b90600052602060002090601f01602090048101928261007757600085556100bd565b82601f1061009057805160ff19168380011785556100bd565b828001600101855582156100bd579182015b828111156100bd5782518255916020019190600101906100a2565b506100c99291506100cd565b5090565b5b808211156100c957600081556001016100ce565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561010b57600080fd5b82516001600160401b038082111561012257600080fd5b818501915085601f83011261013657600080fd5b815181811115610148576101486100e2565b604051601f8201601f19908116603f01168101908382118183101715610170576101706100e2565b81604052828152888684870101111561018857600080fd5b600093505b828410156101aa578484018601518185018701529285019261018d565b828411156101bb5760008684830101525b98975050505050505050565b600181811c908216806101db57607f821691505b602082108114156101fc57634e487b7160e01b600052602260045260246000fd5b50919050565b6103bd806102116000396000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c806327fd7ef61461007d57806334fcf43714610099578063c699c4d6146100ae578063d28d8852146100e9578063d39bbef0146100f1578063d568866c14610107578063d6d7d5251461011a578063eeb8a8d31461011a575b600080fd5b61008660005481565b6040519081526020015b60405180910390f35b6100ac6100a736600461026c565b600055565b005b6100dc6100bc366004610285565b50506040805180820190915260048152634f52434d60e01b602082015290565b60405161009091906102f7565b6100dc610149565b6100866100ff366004610285565b505060005490565b6100dc610115366004610285565b6101d7565b610132610128366004610285565b5050600054600191565b604080519215158352602083019190915201610090565b600180546101569061034c565b80601f01602080910402602001604051908101604052809291908181526020018280546101829061034c565b80156101cf5780601f106101a4576101008083540402835291602001916101cf565b820191906000526020600020905b8154815290600101906020018083116101b257829003601f168201915b505050505081565b6060600180546101e69061034c565b80601f01602080910402602001604051908101604052809291908181526020018280546102129061034c565b801561025f5780601f106102345761010080835404028352916020019161025f565b820191906000526020600020905b81548152906001019060200180831161024257829003601f168201915b5050505050905092915050565b60006020828403121561027e57600080fd5b5035919050565b6000806020838503121561029857600080fd5b823567ffffffffffffffff808211156102b057600080fd5b818501915085601f8301126102c457600080fd5b8135818111156102d357600080fd5b8660208285010111156102e557600080fd5b60209290920196919550909350505050565b600060208083528351808285015260005b8181101561032457858101830151858201604001528201610308565b81811115610336576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061036057607f821691505b6020821081141561038157634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212203704508616ba3fbb1631e2e11b08de6d88385a959ff5457ed7a1921fb0dd2bc464736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100785760003560e01c806327fd7ef61461007d57806334fcf43714610099578063c699c4d6146100ae578063d28d8852146100e9578063d39bbef0146100f1578063d568866c14610107578063d6d7d5251461011a578063eeb8a8d31461011a575b600080fd5b61008660005481565b6040519081526020015b60405180910390f35b6100ac6100a736600461026c565b600055565b005b6100dc6100bc366004610285565b50506040805180820190915260048152634f52434d60e01b602082015290565b60405161009091906102f7565b6100dc610149565b6100866100ff366004610285565b505060005490565b6100dc610115366004610285565b6101d7565b610132610128366004610285565b5050600054600191565b604080519215158352602083019190915201610090565b600180546101569061034c565b80601f01602080910402602001604051908101604052809291908181526020018280546101829061034c565b80156101cf5780601f106101a4576101008083540402835291602001916101cf565b820191906000526020600020905b8154815290600101906020018083116101b257829003601f168201915b505050505081565b6060600180546101e69061034c565b80601f01602080910402602001604051908101604052809291908181526020018280546102129061034c565b801561025f5780601f106102345761010080835404028352916020019161025f565b820191906000526020600020905b81548152906001019060200180831161024257829003601f168201915b5050505050905092915050565b60006020828403121561027e57600080fd5b5035919050565b6000806020838503121561029857600080fd5b823567ffffffffffffffff808211156102b057600080fd5b818501915085601f8301126102c457600080fd5b8135818111156102d357600080fd5b8660208285010111156102e557600080fd5b60209290920196919550909350505050565b600060208083528351808285015260005b8181101561032457858101830151858201604001528201610308565b81811115610336576000604083870101525b50601f01601f1916929092016040019392505050565b600181811c9082168061036057607f821691505b6020821081141561038157634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212203704508616ba3fbb1631e2e11b08de6d88385a959ff5457ed7a1921fb0dd2bc464736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "get(bytes)": {
        "returns": {
          "_rate": "The rate of the requested asset / pair / pool.",
          "success": "if no valid (recent) rate is available, return false else true."
        }
      },
      "name(bytes)": {
        "returns": {
          "_0": "(string) A human readable name about this oracle."
        }
      },
      "peek(bytes)": {
        "returns": {
          "rate": "The rate of the requested asset / pair / pool.",
          "success": "if no valid (recent) rate is available, return false else true."
        }
      },
      "peekSpot(bytes)": {
        "returns": {
          "rate": "The rate of the requested asset / pair / pool."
        }
      },
      "symbol(bytes)": {
        "returns": {
          "_0": "(string) A human readable symbol name about this oracle."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "get(bytes)": {
        "notice": "Get the latest exchange rate. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
      },
      "name(bytes)": {
        "notice": "Returns a human readable name about this oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
      },
      "peek(bytes)": {
        "notice": "Check the last exchange rate without any state changes. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
      },
      "peekSpot(bytes)": {
        "notice": "Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek(). For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
      },
      "symbol(bytes)": {
        "notice": "Returns a human readable (short) name about this oracle. For example: (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8420,
        "contract": "contracts/options/mocks/OracleMock.sol:OracleMock",
        "label": "mockValue",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 8422,
        "contract": "contracts/options/mocks/OracleMock.sol:OracleMock",
        "label": "_name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}