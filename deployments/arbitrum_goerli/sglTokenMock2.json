{
  "address": "0xDD13cb569224E7D0F35eEac269dA99C500f571FD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_initialAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_val",
          "type": "uint256"
        }
      ],
      "name": "freeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x15341bee1860b9cc892f6fbf00356367dc6ef778c2d7549533513de4d990eb6b",
  "receipt": {
    "to": null,
    "from": "0xEAF9f533871B07B151883908B4Fb6eeF4b51A95F",
    "contractAddress": "0xDD13cb569224E7D0F35eEac269dA99C500f571FD",
    "transactionIndex": 1,
    "gasUsed": "9597048",
    "logsBloom": "0x
    "blockHash": "0x8b482c08de476d231a3eef6e14d191608c8dba822df35d093b66415d456dd2d3",
    "transactionHash": "0x15341bee1860b9cc892f6fbf00356367dc6ef778c2d7549533513de4d990eb6b",
    "logs": [],
    "blockNumber": 9978773,
    "cumulativeGasUsed": "9597048",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "sglTokenMock2",
    "sgl2",
    "0",
    "18"
  ],
  "numDeployments": 1,
  "solcInputHash": "4fd96444f73e15d895ccf23ef345c232",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_initialAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_val\",\"type\":\"uint256\"}],\"name\":\"freeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"amount\":\"The maximum collective amount that `spender` can draw.\",\"spender\":\"Address of the party that can draw from msg.sender's account.\"},\"returns\":{\"_0\":\"(bool) Returns True if approved.\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"This permit must be redeemed before this deadline (UTC timestamp in seconds).\",\"owner_\":\"Address of the owner.\",\"spender\":\"The address of the spender that gets approved to draw from `owner_`.\",\"value\":\"The maximum collective amount that `spender` can draw.\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"of the tokens to move.\",\"to\":\"The address to move the tokens.\"},\"returns\":{\"_0\":\"(bool) Returns True if succeeded.\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The token amount to move.\",\"from\":\"Address to draw tokens from.\",\"to\":\"The address to move the tokens.\"},\"returns\":{\"_0\":\"(bool) Returns True if succeeded.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"owner > spender > allowance mapping.\"},\"approve(address,uint256)\":{\"notice\":\"Approves `amount` from sender to be spend by `spender`.\"},\"balanceOf(address)\":{\"notice\":\"owner > balance mapping.\"},\"nonces(address)\":{\"notice\":\"owner > nonce mapping. Used in `permit`.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approves `value` from `owner_` to be spend by `spender`.\"},\"transfer(address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `msg.sender` to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers `amount` tokens from `from` to `to`. Caller needs approval for `from`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/mocks/ERC20Mock.sol\":\"ERC20Mock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@boringcrypto/boring-solidity/contracts/Domain.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Based on code and smartness by Ross Campbell and Keno\\n// Uses immutable to store the domain separator to reduce gas usage\\n// If the chain id changes due to a fork, the forked chain will calculate on the fly.\\npragma solidity ^0.8.0;\\n\\n// solhint-disable no-inline-assembly\\n\\ncontract Domain {\\n    bytes32 private constant DOMAIN_SEPARATOR_SIGNATURE_HASH = keccak256(\\\"EIP712Domain(uint256 chainId,address verifyingContract)\\\");\\n    // See https://eips.ethereum.org/EIPS/eip-191\\n    string private constant EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA = \\\"\\\\x19\\\\x01\\\";\\n\\n    // solhint-disable var-name-mixedcase\\n    bytes32 private immutable _DOMAIN_SEPARATOR;\\n    uint256 private immutable DOMAIN_SEPARATOR_CHAIN_ID;\\n\\n    /// @dev Calculate the DOMAIN_SEPARATOR\\n    function _calculateDomainSeparator(uint256 chainId) private view returns (bytes32) {\\n        return keccak256(abi.encode(DOMAIN_SEPARATOR_SIGNATURE_HASH, chainId, address(this)));\\n    }\\n\\n    constructor() {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        _DOMAIN_SEPARATOR = _calculateDomainSeparator(DOMAIN_SEPARATOR_CHAIN_ID = chainId);\\n    }\\n\\n    /// @dev Return the DOMAIN_SEPARATOR\\n    // It's named internal to allow making it public from the contract that uses it by creating a simple view function\\n    // with the desired public name, such as DOMAIN_SEPARATOR or domainSeparator.\\n    // solhint-disable-next-line func-name-mixedcase\\n    function _domainSeparator() internal view returns (bytes32) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId == DOMAIN_SEPARATOR_CHAIN_ID ? _DOMAIN_SEPARATOR : _calculateDomainSeparator(chainId);\\n    }\\n\\n    function _getDigest(bytes32 dataHash) internal view returns (bytes32 digest) {\\n        digest = keccak256(abi.encodePacked(EIP191_PREFIX_FOR_EIP712_STRUCTURED_DATA, _domainSeparator(), dataHash));\\n    }\\n}\\n\",\"keccak256\":\"0xa36aaf8bda43f23abd0d7e88e6a45196098e3374cf41a9de92ab620c29ca4981\",\"license\":\"MIT\"},\"@boringcrypto/boring-solidity/contracts/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"./interfaces/IERC20.sol\\\";\\nimport \\\"./Domain.sol\\\";\\n\\n// solhint-disable no-inline-assembly\\n// solhint-disable not-rely-on-time\\n\\n// Data part taken out for building of contracts that receive delegate calls\\ncontract ERC20Data {\\n    /// @notice owner > balance mapping.\\n    mapping(address => uint256) public balanceOf;\\n    /// @notice owner > spender > allowance mapping.\\n    mapping(address => mapping(address => uint256)) public allowance;\\n    /// @notice owner > nonce mapping. Used in `permit`.\\n    mapping(address => uint256) public nonces;\\n}\\n\\nabstract contract ERC20 is IERC20, Domain {\\n    /// @notice owner > balance mapping.\\n    mapping(address => uint256) public override balanceOf;\\n    /// @notice owner > spender > allowance mapping.\\n    mapping(address => mapping(address => uint256)) public override allowance;\\n    /// @notice owner > nonce mapping. Used in `permit`.\\n    mapping(address => uint256) public nonces;\\n\\n    /// @notice Transfers `amount` tokens from `msg.sender` to `to`.\\n    /// @param to The address to move the tokens.\\n    /// @param amount of the tokens to move.\\n    /// @return (bool) Returns True if succeeded.\\n    function transfer(address to, uint256 amount) public returns (bool) {\\n        // If `amount` is 0, or `msg.sender` is `to` nothing happens\\n        if (amount != 0 || msg.sender == to) {\\n            uint256 srcBalance = balanceOf[msg.sender];\\n            require(srcBalance >= amount, \\\"ERC20: balance too low\\\");\\n            if (msg.sender != to) {\\n                require(to != address(0), \\\"ERC20: no zero address\\\"); // Moved down so low balance calls safe some gas\\n\\n                balanceOf[msg.sender] = srcBalance - amount; // Underflow is checked\\n                balanceOf[to] += amount;\\n            }\\n        }\\n        emit Transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n\\n    /// @notice Transfers `amount` tokens from `from` to `to`. Caller needs approval for `from`.\\n    /// @param from Address to draw tokens from.\\n    /// @param to The address to move the tokens.\\n    /// @param amount The token amount to move.\\n    /// @return (bool) Returns True if succeeded.\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public returns (bool) {\\n        // If `amount` is 0, or `from` is `to` nothing happens\\n        if (amount != 0) {\\n            uint256 srcBalance = balanceOf[from];\\n            require(srcBalance >= amount, \\\"ERC20: balance too low\\\");\\n\\n            if (from != to) {\\n                uint256 spenderAllowance = allowance[from][msg.sender];\\n                // If allowance is infinite, don't decrease it to save on gas (breaks with EIP-20).\\n                if (spenderAllowance != type(uint256).max) {\\n                    require(spenderAllowance >= amount, \\\"ERC20: allowance too low\\\");\\n                    allowance[from][msg.sender] = spenderAllowance - amount; // Underflow is checked\\n                }\\n                require(to != address(0), \\\"ERC20: no zero address\\\"); // Moved down so other failed calls safe some gas\\n\\n                balanceOf[from] = srcBalance - amount; // Underflow is checked\\n                balanceOf[to] += amount;\\n            }\\n        }\\n        emit Transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /// @notice Approves `amount` from sender to be spend by `spender`.\\n    /// @param spender Address of the party that can draw from msg.sender's account.\\n    /// @param amount The maximum collective amount that `spender` can draw.\\n    /// @return (bool) Returns True if approved.\\n    function approve(address spender, uint256 amount) public override returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n        emit Approval(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32) {\\n        return _domainSeparator();\\n    }\\n\\n    // keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n    bytes32 private constant PERMIT_SIGNATURE_HASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\\n\\n    /// @notice Approves `value` from `owner_` to be spend by `spender`.\\n    /// @param owner_ Address of the owner.\\n    /// @param spender The address of the spender that gets approved to draw from `owner_`.\\n    /// @param value The maximum collective amount that `spender` can draw.\\n    /// @param deadline This permit must be redeemed before this deadline (UTC timestamp in seconds).\\n    function permit(\\n        address owner_,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        require(owner_ != address(0), \\\"ERC20: Owner cannot be 0\\\");\\n        require(block.timestamp < deadline, \\\"ERC20: Expired\\\");\\n        require(\\n            ecrecover(_getDigest(keccak256(abi.encode(PERMIT_SIGNATURE_HASH, owner_, spender, value, nonces[owner_]++, deadline))), v, r, s) ==\\n                owner_,\\n            \\\"ERC20: Invalid Signature\\\"\\n        );\\n        allowance[owner_][spender] = value;\\n        emit Approval(owner_, spender, value);\\n    }\\n}\\n\\ncontract ERC20WithSupply is IERC20, ERC20 {\\n    uint256 public override totalSupply;\\n\\n    function _mint(address user, uint256 amount) internal {\\n        uint256 newTotalSupply = totalSupply + amount;\\n        require(newTotalSupply >= totalSupply, \\\"Mint overflow\\\");\\n        totalSupply = newTotalSupply;\\n        balanceOf[user] += amount;\\n        emit Transfer(address(0), user, amount);\\n    }\\n\\n    function _burn(address user, uint256 amount) internal {\\n        require(balanceOf[user] >= amount, \\\"Burn too much\\\");\\n        totalSupply -= amount;\\n        balanceOf[user] -= amount;\\n        emit Transfer(user, address(0), amount);\\n    }\\n}\\n\",\"keccak256\":\"0xb194f8a423a67abd8fe7a33d6011cc7539bb4e904fae4f943ca06715d1bd7fb5\",\"license\":\"MIT\"},\"@boringcrypto/boring-solidity/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IERC20 {\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /// @notice EIP 2612\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n}\\n\",\"keccak256\":\"0x685e48fafa746587daf71f2a100bcd9dac53699f761fa2c7e80870b02ffd0b69\",\"license\":\"MIT\"},\"contracts/tokens/mocks/ERC20Mock.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.0;\\nimport '@boringcrypto/boring-solidity/contracts/ERC20.sol';\\n\\ncontract ERC20Mock is ERC20WithSupply {\\n    uint8 public decimals;\\n    string public name;\\n    string public symbol;\\n\\n    address public immutable owner = msg.sender;\\n\\n    constructor(\\n        string memory _name,\\n        string memory _symbol,\\n        uint256 _initialAmount,\\n        uint256 _decimals\\n    ) {\\n        name = _name;\\n        symbol = _symbol;\\n        totalSupply = _initialAmount;\\n        decimals = uint8(_decimals);\\n    }\\n\\n    function mintTo(address _to, uint256 _amount) external {\\n        require(msg.sender == owner, 'ERC20Mock: only owner');\\n        _mint(_to, _amount);\\n    }\\n\\n    function freeMint(uint256 _val) public {\\n        if (msg.sender != owner) {\\n            require(_val < 100_000_000 * 1e18, 'ERC20Mock: too much');\\n        }\\n        _mint(msg.sender, _val);\\n    }\\n}\\n\",\"keccak256\":\"0x73c9845a434788831d5a98e76640ec77f1512ff137fed1c2118b91a5653f15a7\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60e06040523360c0523480156200001557600080fd5b50604051620011cb380380620011cb833981016040819052620000389162000261565b4660a08190526200009c81604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692186020820152908101829052306060820152600090608001604051602081830303815290604052805190602001209050919050565b608052508351620000b5906005906020870190620000ee565b508251620000cb906006906020860190620000ee565b506003919091556004805460ff191660ff90921691909117905550620003189050565b828054620000fc90620002db565b90600052602060002090601f0160209004810192826200012057600085556200016b565b82601f106200013b57805160ff19168380011785556200016b565b828001600101855582156200016b579182015b828111156200016b5782518255916020019190600101906200014e565b50620001799291506200017d565b5090565b5b808211156200017957600081556001016200017e565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001bc57600080fd5b81516001600160401b0380821115620001d957620001d962000194565b604051601f8301601f19908116603f0116810190828211818310171562000204576200020462000194565b816040528381526020925086838588010111156200022157600080fd5b600091505b8382101562000245578582018301518183018401529082019062000226565b83821115620002575760008385830101525b9695505050505050565b600080600080608085870312156200027857600080fd5b84516001600160401b03808211156200029057600080fd5b6200029e88838901620001aa565b95506020870151915080821115620002b557600080fd5b50620002c487828801620001aa565b604087015160609097015195989097509350505050565b600181811c90821680620002f057607f821691505b602082108114156200031257634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c051610e7562000356600039600081816101d90152818161053e01526105bc0152600061098c015260006109c10152610e756000f3fe608060405234801561001057600080fd5b50600436106100d55760003560e01c806370a082311161008757806370a08231146101815780637c928fe9146101a15780637ecebe00146101b45780638da5cb5b146101d457806395d89b4114610213578063a9059cbb1461021b578063d505accf1461022e578063dd62ed3e1461024157600080fd5b806306fdde03146100da578063095ea7b3146100f857806318160ddd1461011b57806323b872dd14610132578063313ce567146101455780633644e51514610164578063449a52f81461016c575b600080fd5b6100e261026c565b6040516100ef9190610b67565b60405180910390f35b61010b610106366004610bb6565b6102fa565b60405190151581526020016100ef565b61012460035481565b6040519081526020016100ef565b61010b610140366004610be0565b610366565b6004546101529060ff1681565b60405160ff90911681526020016100ef565b610124610524565b61017f61017a366004610bb6565b610533565b005b61012461018f366004610c1c565b60006020819052908152604090205481565b61017f6101af366004610c3e565b6105b1565b6101246101c2366004610c1c565b60026020526000908152604090205481565b6101fb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ef565b6100e261063e565b61010b610229366004610bb6565b61064b565b61017f61023c366004610c57565b61073e565b61012461024f366004610cca565b600160209081526000928352604080842090915290825290205481565b6005805461027990610cfd565b80601f01602080910402602001604051908101604052809291908181526020018280546102a590610cfd565b80156102f25780601f106102c7576101008083540402835291602001916102f2565b820191906000526020600020905b8154815290600101906020018083116102d557829003601f168201915b505050505081565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103559086815260200190565b60405180910390a350600192915050565b600081156104df576001600160a01b038416600090815260208190526040902054828110156103b05760405162461bcd60e51b81526004016103a790610d38565b60405180910390fd5b836001600160a01b0316856001600160a01b0316146104dd576001600160a01b0385166000908152600160209081526040808320338452909152902054600019811461047057838110156104415760405162461bcd60e51b815260206004820152601860248201527745524332303a20616c6c6f77616e636520746f6f206c6f7760401b60448201526064016103a7565b61044b8482610d7e565b6001600160a01b03871660009081526001602090815260408083203384529091529020555b6001600160a01b0385166104965760405162461bcd60e51b81526004016103a790610d95565b6104a08483610d7e565b6001600160a01b0380881660009081526020819052604080822093909355908716815290812080548692906104d6908490610dc5565b9091555050505b505b826001600160a01b0316846001600160a01b0316600080516020610e208339815191528460405161051291815260200190565b60405180910390a35060019392505050565b600061052e610987565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105a35760405162461bcd60e51b815260206004820152601560248201527422a921991826b7b1b59d1037b7363c9037bbb732b960591b60448201526064016103a7565b6105ad82826109e7565b5050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610631576a52b7d2dcc80cd2e400000081106106315760405162461bcd60e51b815260206004820152601360248201527208aa48664609adec6d67440e8dede40daeac6d606b1b60448201526064016103a7565b61063b33826109e7565b50565b6006805461027990610cfd565b6000811515806106635750336001600160a01b038416145b156107135733600090815260208190526040902054828110156106985760405162461bcd60e51b81526004016103a790610d38565b336001600160a01b03851614610711576001600160a01b0384166106ce5760405162461bcd60e51b81526004016103a790610d95565b6106d88382610d7e565b33600090815260208190526040808220929092556001600160a01b0386168152908120805485929061070b908490610dc5565b90915550505b505b6040518281526001600160a01b038416903390600080516020610e2083398151915290602001610355565b6001600160a01b03871661078f5760405162461bcd60e51b8152602060048201526018602482015277045524332303a204f776e65722063616e6e6f7420626520360441b60448201526064016103a7565b8342106107cf5760405162461bcd60e51b815260206004820152600e60248201526d115490cc8c0e88115e1c1a5c995960921b60448201526064016103a7565b6001600160a01b03871660008181526002602052604081208054600192610879927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928d928d928d929161082283610ddd565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810188905260e00160405160208183030381529060405280519060200120610aa1565b6040805160008152602081018083529290925260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156108c7573d6000803e3d6000fd5b505050602060405103516001600160a01b0316146109225760405162461bcd60e51b815260206004820152601860248201527745524332303a20496e76616c6964205369676e617475726560401b60448201526064016103a7565b6001600160a01b038781166000818152600160209081526040808320948b168084529482529182902089905590518881527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6000467f000000000000000000000000000000000000000000000000000000000000000081146109bf576109ba81610af6565b6109e1565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b6000816003546109f79190610dc5565b9050600354811015610a3b5760405162461bcd60e51b815260206004820152600d60248201526c4d696e74206f766572666c6f7760981b60448201526064016103a7565b60038190556001600160a01b03831660009081526020819052604081208054849290610a68908490610dc5565b90915550506040518281526001600160a01b03841690600090600080516020610e208339815191529060200160405180910390a3505050565b600060405180604001604052806002815260200161190160f01b815250610ac6610987565b83604051602001610ad993929190610df8565b604051602081830303815290604052805190602001209050919050565b604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692186020820152908101829052306060820152600090608001610ad9565b60005b83811015610b52578181015183820152602001610b3a565b83811115610b61576000848401525b50505050565b6020815260008251806020840152610b86816040850160208701610b37565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610bb157600080fd5b919050565b60008060408385031215610bc957600080fd5b610bd283610b9a565b946020939093013593505050565b600080600060608486031215610bf557600080fd5b610bfe84610b9a565b9250610c0c60208501610b9a565b9150604084013590509250925092565b600060208284031215610c2e57600080fd5b610c3782610b9a565b9392505050565b600060208284031215610c5057600080fd5b5035919050565b600080600080600080600060e0888a031215610c7257600080fd5b610c7b88610b9a565b9650610c8960208901610b9a565b95506040880135945060608801359350608088013560ff81168114610cad57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610cdd57600080fd5b610ce683610b9a565b9150610cf460208401610b9a565b90509250929050565b600181811c90821680610d1157607f821691505b60208210811415610d3257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526016908201527545524332303a2062616c616e636520746f6f206c6f7760501b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610d9057610d90610d68565b500390565b60208082526016908201527545524332303a206e6f207a65726f206164647265737360501b604082015260600190565b60008219821115610dd857610dd8610d68565b500190565b6000600019821415610df157610df1610d68565b5060010190565b60008451610e0a818460208901610b37565b9190910192835250602082015260400191905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220fae050e9685775d4277ecdce5931ffbd82f19a1038fe91fab901358ad7e9b1c864736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d55760003560e01c806370a082311161008757806370a08231146101815780637c928fe9146101a15780637ecebe00146101b45780638da5cb5b146101d457806395d89b4114610213578063a9059cbb1461021b578063d505accf1461022e578063dd62ed3e1461024157600080fd5b806306fdde03146100da578063095ea7b3146100f857806318160ddd1461011b57806323b872dd14610132578063313ce567146101455780633644e51514610164578063449a52f81461016c575b600080fd5b6100e261026c565b6040516100ef9190610b67565b60405180910390f35b61010b610106366004610bb6565b6102fa565b60405190151581526020016100ef565b61012460035481565b6040519081526020016100ef565b61010b610140366004610be0565b610366565b6004546101529060ff1681565b60405160ff90911681526020016100ef565b610124610524565b61017f61017a366004610bb6565b610533565b005b61012461018f366004610c1c565b60006020819052908152604090205481565b61017f6101af366004610c3e565b6105b1565b6101246101c2366004610c1c565b60026020526000908152604090205481565b6101fb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ef565b6100e261063e565b61010b610229366004610bb6565b61064b565b61017f61023c366004610c57565b61073e565b61012461024f366004610cca565b600160209081526000928352604080842090915290825290205481565b6005805461027990610cfd565b80601f01602080910402602001604051908101604052809291908181526020018280546102a590610cfd565b80156102f25780601f106102c7576101008083540402835291602001916102f2565b820191906000526020600020905b8154815290600101906020018083116102d557829003601f168201915b505050505081565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103559086815260200190565b60405180910390a350600192915050565b600081156104df576001600160a01b038416600090815260208190526040902054828110156103b05760405162461bcd60e51b81526004016103a790610d38565b60405180910390fd5b836001600160a01b0316856001600160a01b0316146104dd576001600160a01b0385166000908152600160209081526040808320338452909152902054600019811461047057838110156104415760405162461bcd60e51b815260206004820152601860248201527745524332303a20616c6c6f77616e636520746f6f206c6f7760401b60448201526064016103a7565b61044b8482610d7e565b6001600160a01b03871660009081526001602090815260408083203384529091529020555b6001600160a01b0385166104965760405162461bcd60e51b81526004016103a790610d95565b6104a08483610d7e565b6001600160a01b0380881660009081526020819052604080822093909355908716815290812080548692906104d6908490610dc5565b9091555050505b505b826001600160a01b0316846001600160a01b0316600080516020610e208339815191528460405161051291815260200190565b60405180910390a35060019392505050565b600061052e610987565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105a35760405162461bcd60e51b815260206004820152601560248201527422a921991826b7b1b59d1037b7363c9037bbb732b960591b60448201526064016103a7565b6105ad82826109e7565b5050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610631576a52b7d2dcc80cd2e400000081106106315760405162461bcd60e51b815260206004820152601360248201527208aa48664609adec6d67440e8dede40daeac6d606b1b60448201526064016103a7565b61063b33826109e7565b50565b6006805461027990610cfd565b6000811515806106635750336001600160a01b038416145b156107135733600090815260208190526040902054828110156106985760405162461bcd60e51b81526004016103a790610d38565b336001600160a01b03851614610711576001600160a01b0384166106ce5760405162461bcd60e51b81526004016103a790610d95565b6106d88382610d7e565b33600090815260208190526040808220929092556001600160a01b0386168152908120805485929061070b908490610dc5565b90915550505b505b6040518281526001600160a01b038416903390600080516020610e2083398151915290602001610355565b6001600160a01b03871661078f5760405162461bcd60e51b8152602060048201526018602482015277045524332303a204f776e65722063616e6e6f7420626520360441b60448201526064016103a7565b8342106107cf5760405162461bcd60e51b815260206004820152600e60248201526d115490cc8c0e88115e1c1a5c995960921b60448201526064016103a7565b6001600160a01b03871660008181526002602052604081208054600192610879927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9928d928d928d929161082283610ddd565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810188905260e00160405160208183030381529060405280519060200120610aa1565b6040805160008152602081018083529290925260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156108c7573d6000803e3d6000fd5b505050602060405103516001600160a01b0316146109225760405162461bcd60e51b815260206004820152601860248201527745524332303a20496e76616c6964205369676e617475726560401b60448201526064016103a7565b6001600160a01b038781166000818152600160209081526040808320948b168084529482529182902089905590518881527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6000467f000000000000000000000000000000000000000000000000000000000000000081146109bf576109ba81610af6565b6109e1565b7f00000000000000000000000000000000000000000000000000000000000000005b91505090565b6000816003546109f79190610dc5565b9050600354811015610a3b5760405162461bcd60e51b815260206004820152600d60248201526c4d696e74206f766572666c6f7760981b60448201526064016103a7565b60038190556001600160a01b03831660009081526020819052604081208054849290610a68908490610dc5565b90915550506040518281526001600160a01b03841690600090600080516020610e208339815191529060200160405180910390a3505050565b600060405180604001604052806002815260200161190160f01b815250610ac6610987565b83604051602001610ad993929190610df8565b604051602081830303815290604052805190602001209050919050565b604080517f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692186020820152908101829052306060820152600090608001610ad9565b60005b83811015610b52578181015183820152602001610b3a565b83811115610b61576000848401525b50505050565b6020815260008251806020840152610b86816040850160208701610b37565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610bb157600080fd5b919050565b60008060408385031215610bc957600080fd5b610bd283610b9a565b946020939093013593505050565b600080600060608486031215610bf557600080fd5b610bfe84610b9a565b9250610c0c60208501610b9a565b9150604084013590509250925092565b600060208284031215610c2e57600080fd5b610c3782610b9a565b9392505050565b600060208284031215610c5057600080fd5b5035919050565b600080600080600080600060e0888a031215610c7257600080fd5b610c7b88610b9a565b9650610c8960208901610b9a565b95506040880135945060608801359350608088013560ff81168114610cad57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610cdd57600080fd5b610ce683610b9a565b9150610cf460208401610b9a565b90509250929050565b600181811c90821680610d1157607f821691505b60208210811415610d3257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526016908201527545524332303a2062616c616e636520746f6f206c6f7760501b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015610d9057610d90610d68565b500390565b60208082526016908201527545524332303a206e6f207a65726f206164647265737360501b604082015260600190565b60008219821115610dd857610dd8610d68565b500190565b6000600019821415610df157610df1610d68565b5060010190565b60008451610e0a818460208901610b37565b9190910192835250602082015260400191905056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220fae050e9685775d4277ecdce5931ffbd82f19a1038fe91fab901358ad7e9b1c864736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "params": {
          "amount": "The maximum collective amount that `spender` can draw.",
          "spender": "Address of the party that can draw from msg.sender's account."
        },
        "returns": {
          "_0": "(bool) Returns True if approved."
        }
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "params": {
          "deadline": "This permit must be redeemed before this deadline (UTC timestamp in seconds).",
          "owner_": "Address of the owner.",
          "spender": "The address of the spender that gets approved to draw from `owner_`.",
          "value": "The maximum collective amount that `spender` can draw."
        }
      },
      "transfer(address,uint256)": {
        "params": {
          "amount": "of the tokens to move.",
          "to": "The address to move the tokens."
        },
        "returns": {
          "_0": "(bool) Returns True if succeeded."
        }
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "amount": "The token amount to move.",
          "from": "Address to draw tokens from.",
          "to": "The address to move the tokens."
        },
        "returns": {
          "_0": "(bool) Returns True if succeeded."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "allowance(address,address)": {
        "notice": "owner > spender > allowance mapping."
      },
      "approve(address,uint256)": {
        "notice": "Approves `amount` from sender to be spend by `spender`."
      },
      "balanceOf(address)": {
        "notice": "owner > balance mapping."
      },
      "nonces(address)": {
        "notice": "owner > nonce mapping. Used in `permit`."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "notice": "Approves `value` from `owner_` to be spend by `spender`."
      },
      "transfer(address,uint256)": {
        "notice": "Transfers `amount` tokens from `msg.sender` to `to`."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Transfers `amount` tokens from `from` to `to`. Caller needs approval for `from`."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 479,
        "contract": "contracts/tokens/mocks/ERC20Mock.sol:ERC20Mock",
        "label": "balanceOf",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 487,
        "contract": "contracts/tokens/mocks/ERC20Mock.sol:ERC20Mock",
        "label": "allowance",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 492,
        "contract": "contracts/tokens/mocks/ERC20Mock.sol:ERC20Mock",
        "label": "nonces",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 800,
        "contract": "contracts/tokens/mocks/ERC20Mock.sol:ERC20Mock",
        "label": "totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 10272,
        "contract": "contracts/tokens/mocks/ERC20Mock.sol:ERC20Mock",
        "label": "decimals",
        "offset": 0,
        "slot": "4",
        "type": "t_uint8"
      },
      {
        "astId": 10274,
        "contract": "contracts/tokens/mocks/ERC20Mock.sol:ERC20Mock",
        "label": "name",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 10276,
        "contract": "contracts/tokens/mocks/ERC20Mock.sol:ERC20Mock",
        "label": "symbol",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}