// Generated by @wagmi/cli@0.1.5 on 2/5/2023 at 11:29:35 PM
import { useContract, UseContractConfig } from 'wagmi';

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Vesting
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const vestingABI = [
    {
        stateMutability: 'nonpayable',
        type: 'constructor',
        inputs: [
            { name: '_token', internalType: 'contract IERC20', type: 'address' },
            { name: '_cliff', internalType: 'uint256', type: 'uint256' },
            { name: '_duration', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'user', internalType: 'address', type: 'address', indexed: true },
            { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'Claimed',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'old', internalType: 'address', type: 'address', indexed: true },
            { name: '_new', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'ConservatorUpdated',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
            { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'OwnershipTransferred',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'oldState', internalType: 'bool', type: 'bool', indexed: false },
            { name: 'newState', internalType: 'bool', type: 'bool', indexed: false },
        ],
        name: 'PausedUpdated',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'user', internalType: 'address', type: 'address', indexed: true },
            { name: 'timestamp', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'RevokeCompleted',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'user', internalType: 'address', type: 'address', indexed: true },
            { name: 'timestamp', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'RevokeRequested',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'user', internalType: 'address', type: 'address', indexed: true },
            { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'UserRegistered',
    },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'claim', outputs: [] },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'claimOwnership', outputs: [] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '_user', internalType: 'address', type: 'address' }],
        name: 'claimable',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'claimable',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'cliff',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'conservator',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'duration',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_user', internalType: 'address', type: 'address' }],
        name: 'emergencyRevoke',
        outputs: [],
    },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'emergencyRevoke', outputs: [] },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_seededAmount', internalType: 'uint256', type: 'uint256' }],
        name: 'init',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    { stateMutability: 'view', type: 'function', inputs: [], name: 'paused', outputs: [{ name: '', internalType: 'bool', type: 'bool' }] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'pendingOwner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_user', internalType: 'address', type: 'address' },
            { name: '_amount', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'registerUser',
        outputs: [],
    },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'requestEmergencyRevoke', outputs: [] },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_user', internalType: 'address', type: 'address' }],
        name: 'requestEmergencyRevoke',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'revokeRequestedAt',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'revokeTimeWindow',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    { stateMutability: 'view', type: 'function', inputs: [], name: 'revoked', outputs: [{ name: '', internalType: 'bool', type: 'bool' }] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'seeded',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_conservator', internalType: 'address', type: 'address' }],
        name: 'setConservator',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'start',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'token',
        outputs: [{ name: '', internalType: 'contract IERC20', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'totalClaimed',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'newOwner', internalType: 'address', type: 'address' },
            { name: 'direct', internalType: 'bool', type: 'bool' },
            { name: 'renounce', internalType: 'bool', type: 'bool' },
        ],
        name: 'transferOwnership',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'val', internalType: 'bool', type: 'bool' }],
        name: 'updatePause',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'address', type: 'address' }],
        name: 'users',
        outputs: [
            { name: 'amount', internalType: 'uint256', type: 'uint256' },
            { name: 'claimed', internalType: 'uint256', type: 'uint256' },
            { name: 'latestClaimTimestamp', internalType: 'uint256', type: 'uint256' },
            { name: 'revoked', internalType: 'bool', type: 'bool' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '_user', internalType: 'address', type: 'address' }],
        name: 'vested',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'vested',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TapiocaOptionBroker
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const tapiocaOptionBrokerABI = [
    {
        stateMutability: 'nonpayable',
        type: 'constructor',
        inputs: [
            { name: '_tOLP', internalType: 'address', type: 'address' },
            { name: '_oTAP', internalType: 'address', type: 'address' },
            { name: '_tapOFT', internalType: 'address', type: 'address' },
            { name: '_oracle', internalType: 'contract IOracle', type: 'address' },
            { name: '_paymentTokenBeneficiary', internalType: 'address', type: 'address' },
        ],
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'epoch', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'cumulative', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'averageMagnitude', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'totalParticipants', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'AMLDivergence',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'epoch', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'to', internalType: 'address', type: 'address', indexed: true },
            { name: 'paymentToken', internalType: 'contract IERC20', type: 'address', indexed: true },
            { name: 'oTapTokenID', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'ExerciseOption',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'epoch', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'ExitPosition',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'epoch', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'extractedTAP', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'epochTAPValuation', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'NewEpoch',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
            { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'OwnershipTransferred',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'epoch', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'sglAssetID', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'totalDeposited', internalType: 'uint256', type: 'uint256', indexed: false },
            {
                name: 'lock',
                internalType: 'struct LockPosition',
                type: 'tuple',
                components: [
                    { name: 'sglAssetID', internalType: 'uint128', type: 'uint128' },
                    { name: 'amount', internalType: 'uint128', type: 'uint128' },
                    { name: 'lockTime', internalType: 'uint128', type: 'uint128' },
                    { name: 'lockDuration', internalType: 'uint128', type: 'uint128' },
                ],
                indexed: false,
            },
            { name: 'discount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'Participate',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'account', internalType: 'address', type: 'address', indexed: false }],
        name: 'Paused',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'paymentToken', internalType: 'contract IERC20', type: 'address', indexed: false },
            { name: 'oracle', internalType: 'contract IOracle', type: 'address', indexed: false },
            { name: 'oracleData', internalType: 'bytes', type: 'bytes', indexed: false },
        ],
        name: 'SetPaymentToken',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'account', internalType: 'address', type: 'address', indexed: false }],
        name: 'Unpaused',
    },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'claimOwnership', outputs: [] },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_paymentTokens', internalType: 'address[]', type: 'address[]' }],
        name: 'collectPaymentTokens',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'epoch',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'epochTAPValuation',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_oTAPTokenID', internalType: 'uint256', type: 'uint256' },
            { name: '_paymentToken', internalType: 'contract IERC20', type: 'address' },
        ],
        name: 'exerciseOption',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_tOLPTokenID', internalType: 'uint256', type: 'uint256' }],
        name: 'exitPosition',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '_oTAPTokenID', internalType: 'uint256', type: 'uint256' },
            { name: '_paymentToken', internalType: 'contract IERC20', type: 'address' },
        ],
        name: 'getOTCDealDetails',
        outputs: [
            { name: 'eligibleTapAmount', internalType: 'uint256', type: 'uint256' },
            { name: 'paymentTokenAmount', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'lastEpochUpdate',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'newEpoch', outputs: [] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'oTAP',
        outputs: [{ name: '', internalType: 'contract OTAP', type: 'address' }],
    },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'oTAPBrokerClaim', outputs: [] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'oTAPCalls',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '', internalType: 'address', type: 'address' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'participants',
        outputs: [
            { name: 'hasParticipated', internalType: 'bool', type: 'bool' },
            { name: 'hasVotingPower', internalType: 'bool', type: 'bool' },
            { name: 'averageMagnitude', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_tOLPTokenID', internalType: 'uint256', type: 'uint256' }],
        name: 'participate',
        outputs: [{ name: 'oTAPTokenID', internalType: 'uint256', type: 'uint256' }],
    },
    { stateMutability: 'view', type: 'function', inputs: [], name: 'paused', outputs: [{ name: '', internalType: 'bool', type: 'bool' }] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'paymentTokenBeneficiary',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'contract IERC20', type: 'address' }],
        name: 'paymentTokens',
        outputs: [
            { name: 'oracle', internalType: 'contract IOracle', type: 'address' },
            { name: 'oracleData', internalType: 'bytes', type: 'bytes' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'pendingOwner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_paymentToken', internalType: 'contract IERC20', type: 'address' },
            { name: '_oracle', internalType: 'contract IOracle', type: 'address' },
            { name: '_oracleData', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'setPaymentToken',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_paymentTokenBeneficiary', internalType: 'address', type: 'address' }],
        name: 'setPaymentTokenBeneficiary',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'singularityGauges',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'tOLP',
        outputs: [{ name: '', internalType: 'contract TapiocaOptionLiquidityProvision', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'tapOFT',
        outputs: [{ name: '', internalType: 'contract TapOFT', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'tapOracle',
        outputs: [{ name: '', internalType: 'contract IOracle', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'tapOracleData',
        outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'newOwner', internalType: 'address', type: 'address' },
            { name: 'direct', internalType: 'bool', type: 'bool' },
            { name: 'renounce', internalType: 'bool', type: 'bool' },
        ],
        name: 'transferOwnership',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
        name: 'twAML',
        outputs: [
            { name: 'totalParticipants', internalType: 'uint256', type: 'uint256' },
            { name: 'averageMagnitude', internalType: 'uint256', type: 'uint256' },
            { name: 'totalDeposited', internalType: 'uint256', type: 'uint256' },
            { name: 'cumulative', internalType: 'uint256', type: 'uint256' },
        ],
    },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TapiocaOptionLiquidityProvision
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const tapiocaOptionLiquidityProvisionABI = [
    { stateMutability: 'nonpayable', type: 'constructor', inputs: [{ name: '_yieldBox', internalType: 'address', type: 'address' }] },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'owner', internalType: 'address', type: 'address', indexed: true },
            { name: 'approved', internalType: 'address', type: 'address', indexed: true },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
        ],
        name: 'Approval',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'owner', internalType: 'address', type: 'address', indexed: true },
            { name: 'operator', internalType: 'address', type: 'address', indexed: true },
            { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
        ],
        name: 'ApprovalForAll',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'to', internalType: 'address', type: 'address', indexed: true },
            { name: 'sglAssetID', internalType: 'uint128', type: 'uint128', indexed: true },
            {
                name: 'lockPosition',
                internalType: 'struct LockPosition',
                type: 'tuple',
                components: [
                    { name: 'sglAssetID', internalType: 'uint128', type: 'uint128' },
                    { name: 'amount', internalType: 'uint128', type: 'uint128' },
                    { name: 'lockTime', internalType: 'uint128', type: 'uint128' },
                    { name: 'lockDuration', internalType: 'uint128', type: 'uint128' },
                ],
                indexed: false,
            },
        ],
        name: 'Burn',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'to', internalType: 'address', type: 'address', indexed: true },
            { name: 'sglAssetID', internalType: 'uint128', type: 'uint128', indexed: true },
            {
                name: 'lockPosition',
                internalType: 'struct LockPosition',
                type: 'tuple',
                components: [
                    { name: 'sglAssetID', internalType: 'uint128', type: 'uint128' },
                    { name: 'amount', internalType: 'uint128', type: 'uint128' },
                    { name: 'lockTime', internalType: 'uint128', type: 'uint128' },
                    { name: 'lockDuration', internalType: 'uint128', type: 'uint128' },
                ],
                indexed: false,
            },
        ],
        name: 'Mint',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
            { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'OwnershipTransferred',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'account', internalType: 'address', type: 'address', indexed: false }],
        name: 'Paused',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'sgl', internalType: 'address', type: 'address', indexed: false },
            { name: 'assetID', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'RegisterSingularity',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'sgl', internalType: 'address', type: 'address', indexed: false },
            { name: 'poolWeight', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'SetSGLPoolWeight',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'from', internalType: 'address', type: 'address', indexed: true },
            { name: 'to', internalType: 'address', type: 'address', indexed: true },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
        ],
        name: 'Transfer',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'account', internalType: 'address', type: 'address', indexed: false }],
        name: 'Unpaused',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'sgl', internalType: 'address', type: 'address', indexed: false },
            { name: 'assetID', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'UnregisterSingularity',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'totalSingularityPoolWeights', internalType: 'uint256', type: 'uint256', indexed: false }],
        name: 'UpdateTotalSingularityPoolWeights',
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'contract IERC20', type: 'address' }],
        name: 'activeSingularities',
        outputs: [
            { name: 'sglAssetID', internalType: 'uint256', type: 'uint256' },
            { name: 'totalDeposited', internalType: 'uint256', type: 'uint256' },
            { name: 'poolWeight', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'approve',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
        name: 'balanceOf',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'claimOwnership', outputs: [] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
        name: 'getApproved',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],
        name: 'getLock',
        outputs: [
            { name: '', internalType: 'bool', type: 'bool' },
            {
                name: '',
                internalType: 'struct LockPosition',
                type: 'tuple',
                components: [
                    { name: 'sglAssetID', internalType: 'uint128', type: 'uint128' },
                    { name: 'amount', internalType: 'uint128', type: 'uint128' },
                    { name: 'lockTime', internalType: 'uint128', type: 'uint128' },
                    { name: 'lockDuration', internalType: 'uint128', type: 'uint128' },
                ],
            },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getSingularities',
        outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getSingularityPools',
        outputs: [
            {
                name: '',
                internalType: 'struct SingularityPool[]',
                type: 'tuple[]',
                components: [
                    { name: 'sglAssetID', internalType: 'uint256', type: 'uint256' },
                    { name: 'totalDeposited', internalType: 'uint256', type: 'uint256' },
                    { name: 'poolWeight', internalType: 'uint256', type: 'uint256' },
                ],
            },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '_sglAssetId', internalType: 'uint256', type: 'uint256' }],
        name: 'getTotalPoolDeposited',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'owner', internalType: 'address', type: 'address' },
            { name: 'operator', internalType: 'address', type: 'address' },
        ],
        name: 'isApprovedForAll',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '_spender', internalType: 'address', type: 'address' },
            { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'isApprovedOrOwner',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_from', internalType: 'address', type: 'address' },
            { name: '_to', internalType: 'address', type: 'address' },
            { name: '_singularity', internalType: 'contract IERC20', type: 'address' },
            { name: '_lockDuration', internalType: 'uint128', type: 'uint128' },
            { name: '_amount', internalType: 'uint128', type: 'uint128' },
        ],
        name: 'lock',
        outputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
        name: 'lockPositions',
        outputs: [
            { name: 'sglAssetID', internalType: 'uint128', type: 'uint128' },
            { name: 'amount', internalType: 'uint128', type: 'uint128' },
            { name: 'lockTime', internalType: 'uint128', type: 'uint128' },
            { name: 'lockDuration', internalType: 'uint128', type: 'uint128' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'name',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'pure',
        type: 'function',
        inputs: [
            { name: '', internalType: 'address', type: 'address' },
            { name: '', internalType: 'address', type: 'address' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'onERC1155Received',
        outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
        name: 'ownerOf',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    { stateMutability: 'view', type: 'function', inputs: [], name: 'paused', outputs: [{ name: '', internalType: 'bool', type: 'bool' }] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'pendingOwner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'singularity', internalType: 'contract IERC20', type: 'address' },
            { name: 'assetID', internalType: 'uint256', type: 'uint256' },
            { name: 'weight', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'registerSingularity',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'from', internalType: 'address', type: 'address' },
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'safeTransferFrom',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'from', internalType: 'address', type: 'address' },
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
            { name: 'data', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'safeTransferFrom',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'operator', internalType: 'address', type: 'address' },
            { name: 'approved', internalType: 'bool', type: 'bool' },
        ],
        name: 'setApprovalForAll',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'singularity', internalType: 'contract IERC20', type: 'address' },
            { name: 'weight', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'setSGLPoolWEight',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
        name: 'sglAssetIDToAddress',
        outputs: [{ name: '', internalType: 'contract IERC20', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
        name: 'singularities',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
        name: 'supportsInterface',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'symbol',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'tokenCounter',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
        name: 'tokenURI',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'totalSingularityPoolWeights',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'from', internalType: 'address', type: 'address' },
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'transferFrom',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'newOwner', internalType: 'address', type: 'address' },
            { name: 'direct', internalType: 'bool', type: 'bool' },
            { name: 'renounce', internalType: 'bool', type: 'bool' },
        ],
        name: 'transferOwnership',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
            { name: '_singularity', internalType: 'contract IERC20', type: 'address' },
            { name: '_to', internalType: 'address', type: 'address' },
        ],
        name: 'unlock',
        outputs: [{ name: 'sharesOut', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'singularity', internalType: 'contract IERC20', type: 'address' }],
        name: 'unregisterSingularity',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'yieldBox',
        outputs: [{ name: '', internalType: 'contract IYieldBox', type: 'address' }],
    },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// OTAP
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const otapABI = [
    { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'owner', internalType: 'address', type: 'address', indexed: true },
            { name: 'approved', internalType: 'address', type: 'address', indexed: true },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
        ],
        name: 'Approval',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'owner', internalType: 'address', type: 'address', indexed: true },
            { name: 'operator', internalType: 'address', type: 'address', indexed: true },
            { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
        ],
        name: 'ApprovalForAll',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'to', internalType: 'address', type: 'address', indexed: true },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
            {
                name: 'option',
                internalType: 'struct TapOption',
                type: 'tuple',
                components: [
                    { name: 'expiry', internalType: 'uint128', type: 'uint128' },
                    { name: 'discount', internalType: 'uint128', type: 'uint128' },
                    { name: 'tOLP', internalType: 'uint256', type: 'uint256' },
                ],
                indexed: false,
            },
        ],
        name: 'Mint',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'from', internalType: 'address', type: 'address', indexed: true },
            { name: 'to', internalType: 'address', type: 'address', indexed: true },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
        ],
        name: 'Transfer',
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'approve',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
        name: 'attributes',
        outputs: [
            { name: 'owner', internalType: 'address', type: 'address' },
            {
                name: '',
                internalType: 'struct TapOption',
                type: 'tuple',
                components: [
                    { name: 'expiry', internalType: 'uint128', type: 'uint128' },
                    { name: 'discount', internalType: 'uint128', type: 'uint128' },
                    { name: 'tOLP', internalType: 'uint256', type: 'uint256' },
                ],
            },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
        name: 'balanceOf',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'broker',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'brokerClaim', outputs: [] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
        name: 'getApproved',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'owner', internalType: 'address', type: 'address' },
            { name: 'operator', internalType: 'address', type: 'address' },
        ],
        name: 'isApprovedForAll',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'spender', internalType: 'address', type: 'address' },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'isApprovedOrOwner',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_to', internalType: 'address', type: 'address' },
            { name: '_expiry', internalType: 'uint128', type: 'uint128' },
            { name: '_discount', internalType: 'uint128', type: 'uint128' },
            { name: '_tOLP', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'mint',
        outputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'mintedOTAP',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'mintedTAP',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'name',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
        name: 'options',
        outputs: [
            { name: 'expiry', internalType: 'uint128', type: 'uint128' },
            { name: 'discount', internalType: 'uint128', type: 'uint128' },
            { name: 'tOLP', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
        name: 'ownerOf',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'from', internalType: 'address', type: 'address' },
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'safeTransferFrom',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'from', internalType: 'address', type: 'address' },
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
            { name: 'data', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'safeTransferFrom',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'operator', internalType: 'address', type: 'address' },
            { name: 'approved', internalType: 'bool', type: 'bool' },
        ],
        name: 'setApprovalForAll',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_tokenId', internalType: 'uint256', type: 'uint256' },
            { name: '_tokenURI', internalType: 'string', type: 'string' },
        ],
        name: 'setTokenURI',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
        name: 'supportsInterface',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'symbol',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '_tokenId', internalType: 'uint256', type: 'uint256' }],
        name: 'tokenURI',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
        name: 'tokenURIs',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'from', internalType: 'address', type: 'address' },
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'transferFrom',
        outputs: [],
    },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TapOFT
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const tapOftABI = [
    {
        stateMutability: 'nonpayable',
        type: 'constructor',
        inputs: [
            { name: '_lzEndpoint', internalType: 'address', type: 'address' },
            { name: '_contributors', internalType: 'address', type: 'address' },
            { name: '_investors', internalType: 'address', type: 'address' },
            { name: '_lbp', internalType: 'address', type: 'address' },
            { name: '_airdrop', internalType: 'address', type: 'address' },
            { name: '_governanceChainId', internalType: 'uint16', type: 'uint16' },
        ],
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'owner', internalType: 'address', type: 'address', indexed: true },
            { name: 'spender', internalType: 'address', type: 'address', indexed: true },
            { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'Approval',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: '_from', internalType: 'address', type: 'address', indexed: true },
            { name: '_amount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'Burned',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: '_old', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: '_new', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'GovernanceChainIdentifierUpdated',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: '_srcChainId', internalType: 'uint16', type: 'uint16', indexed: false },
            { name: '_srcAddress', internalType: 'bytes', type: 'bytes', indexed: false },
            { name: '_nonce', internalType: 'uint64', type: 'uint64', indexed: false },
            { name: '_payload', internalType: 'bytes', type: 'bytes', indexed: false },
            { name: '_reason', internalType: 'bytes', type: 'bytes', indexed: false },
        ],
        name: 'MessageFailed',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: '_by', internalType: 'address', type: 'address', indexed: true },
            { name: '_to', internalType: 'address', type: 'address', indexed: true },
            { name: '_amount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'Minted',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: '_old', internalType: 'address', type: 'address', indexed: true },
            { name: '_new', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'MinterUpdated',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
            { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'OwnershipTransferred',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'account', internalType: 'address', type: 'address', indexed: false }],
        name: 'Paused',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: '_srcChainId', internalType: 'uint16', type: 'uint16', indexed: true },
            { name: '_to', internalType: 'address', type: 'address', indexed: true },
            { name: '_amount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'ReceiveFromChain',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: '_srcChainId', internalType: 'uint16', type: 'uint16', indexed: false },
            { name: '_srcAddress', internalType: 'bytes', type: 'bytes', indexed: false },
            { name: '_nonce', internalType: 'uint64', type: 'uint64', indexed: false },
            { name: '_payloadHash', internalType: 'bytes32', type: 'bytes32', indexed: false },
        ],
        name: 'RetryMessageSuccess',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: '_dstChainId', internalType: 'uint16', type: 'uint16', indexed: true },
            { name: '_from', internalType: 'address', type: 'address', indexed: true },
            { name: '_toAddress', internalType: 'bytes', type: 'bytes', indexed: false },
            { name: '_amount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'SendToChain',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: '_dstChainId', internalType: 'uint16', type: 'uint16', indexed: false },
            { name: '_type', internalType: 'uint16', type: 'uint16', indexed: false },
            { name: '_minDstGas', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'SetMinDstGas',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'precrime', internalType: 'address', type: 'address', indexed: false }],
        name: 'SetPrecrime',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: '_remoteChainId', internalType: 'uint16', type: 'uint16', indexed: false },
            { name: '_path', internalType: 'bytes', type: 'bytes', indexed: false },
        ],
        name: 'SetTrustedRemote',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: '_remoteChainId', internalType: 'uint16', type: 'uint16', indexed: false },
            { name: '_remoteAddress', internalType: 'bytes', type: 'bytes', indexed: false },
        ],
        name: 'SetTrustedRemoteAddress',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: '_useCustomAdapterParams', internalType: 'bool', type: 'bool', indexed: false }],
        name: 'SetUseCustomAdapterParams',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'from', internalType: 'address', type: 'address', indexed: true },
            { name: 'to', internalType: 'address', type: 'address', indexed: true },
            { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'Transfer',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'account', internalType: 'address', type: 'address', indexed: false }],
        name: 'Unpaused',
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'INITIAL_SUPPLY',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'NO_EXTRA_GAS',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'PT_SEND',
        outputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'WEEK',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: 'owner', internalType: 'address', type: 'address' },
            { name: 'spender', internalType: 'address', type: 'address' },
        ],
        name: 'allowance',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'spender', internalType: 'address', type: 'address' },
            { name: 'amount', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'approve',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
        name: 'balanceOf',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'circulatingSupply',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'pure',
        type: 'function',
        inputs: [],
        name: 'decimals',
        outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'spender', internalType: 'address', type: 'address' },
            { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'decreaseAllowance',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'dso_supply',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'emissionsStartTime',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [],
        name: 'emitForWeek',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '_dstChainId', internalType: 'uint16', type: 'uint16' },
            { name: '_toAddress', internalType: 'bytes', type: 'bytes' },
            { name: '_amount', internalType: 'uint256', type: 'uint256' },
            { name: '_useZro', internalType: 'bool', type: 'bool' },
            { name: '_adapterParams', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'estimateSendFee',
        outputs: [
            { name: 'nativeFee', internalType: 'uint256', type: 'uint256' },
            { name: 'zroFee', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_to', internalType: 'address', type: 'address' },
            { name: '_amount', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'extractTAP',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '', internalType: 'uint16', type: 'uint16' },
            { name: '', internalType: 'bytes', type: 'bytes' },
            { name: '', internalType: 'uint64', type: 'uint64' },
        ],
        name: 'failedMessages',
        outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_srcChainId', internalType: 'uint16', type: 'uint16' },
            { name: '_srcAddress', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'forceResumeReceive',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '_version', internalType: 'uint16', type: 'uint16' },
            { name: '_chainId', internalType: 'uint16', type: 'uint16' },
            { name: '', internalType: 'address', type: 'address' },
            { name: '_configType', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'getConfig',
        outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'getCurrentWeekEmission',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '_remoteChainId', internalType: 'uint16', type: 'uint16' }],
        name: 'getTrustedRemoteAddress',
        outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'governanceChainIdentifier',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'spender', internalType: 'address', type: 'address' },
            { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'increaseAllowance',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '_srcChainId', internalType: 'uint16', type: 'uint16' },
            { name: '_srcAddress', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'isTrustedRemote',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'lzEndpoint',
        outputs: [{ name: '', internalType: 'contract ILayerZeroEndpoint', type: 'address' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_srcChainId', internalType: 'uint16', type: 'uint16' },
            { name: '_srcAddress', internalType: 'bytes', type: 'bytes' },
            { name: '_nonce', internalType: 'uint64', type: 'uint64' },
            { name: '_payload', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'lzReceive',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '', internalType: 'uint16', type: 'uint16' },
            { name: '', internalType: 'uint16', type: 'uint16' },
        ],
        name: 'minDstGasLookup',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
        name: 'mintedInWeek',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'minter',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'name',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_srcChainId', internalType: 'uint16', type: 'uint16' },
            { name: '_srcAddress', internalType: 'bytes', type: 'bytes' },
            { name: '_nonce', internalType: 'uint64', type: 'uint64' },
            { name: '_payload', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'nonblockingLzReceive',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'pause', internalType: 'bool', type: 'bool' }],
        name: 'pauseSendTokens',
        outputs: [],
    },
    { stateMutability: 'view', type: 'function', inputs: [], name: 'paused', outputs: [{ name: '', internalType: 'bool', type: 'bool' }] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'precrime',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_amount', internalType: 'uint256', type: 'uint256' }],
        name: 'removeTAP',
        outputs: [],
    },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
    {
        stateMutability: 'payable',
        type: 'function',
        inputs: [
            { name: '_srcChainId', internalType: 'uint16', type: 'uint16' },
            { name: '_srcAddress', internalType: 'bytes', type: 'bytes' },
            { name: '_nonce', internalType: 'uint64', type: 'uint64' },
            { name: '_payload', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'retryMessage',
        outputs: [],
    },
    {
        stateMutability: 'payable',
        type: 'function',
        inputs: [
            { name: '_from', internalType: 'address', type: 'address' },
            { name: '_dstChainId', internalType: 'uint16', type: 'uint16' },
            { name: '_toAddress', internalType: 'bytes', type: 'bytes' },
            { name: '_amount', internalType: 'uint256', type: 'uint256' },
            { name: '_refundAddress', internalType: 'address payable', type: 'address' },
            { name: '_zroPaymentAddress', internalType: 'address', type: 'address' },
            { name: '_adapterParams', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'sendFrom',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_version', internalType: 'uint16', type: 'uint16' },
            { name: '_chainId', internalType: 'uint16', type: 'uint16' },
            { name: '_configType', internalType: 'uint256', type: 'uint256' },
            { name: '_config', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'setConfig',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_identifier', internalType: 'uint256', type: 'uint256' }],
        name: 'setGovernanceChainIdentifier',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_dstChainId', internalType: 'uint16', type: 'uint16' },
            { name: '_packetType', internalType: 'uint16', type: 'uint16' },
            { name: '_minGas', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'setMinDstGas',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_minter', internalType: 'address', type: 'address' }],
        name: 'setMinter',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_precrime', internalType: 'address', type: 'address' }],
        name: 'setPrecrime',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_version', internalType: 'uint16', type: 'uint16' }],
        name: 'setReceiveVersion',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_version', internalType: 'uint16', type: 'uint16' }],
        name: 'setSendVersion',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_srcChainId', internalType: 'uint16', type: 'uint16' },
            { name: '_path', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'setTrustedRemote',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_remoteChainId', internalType: 'uint16', type: 'uint16' },
            { name: '_remoteAddress', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'setTrustedRemoteAddress',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_useCustomAdapterParams', internalType: 'bool', type: 'bool' }],
        name: 'setUseCustomAdapterParams',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
        name: 'supportsInterface',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'symbol',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'timestamp', internalType: 'uint256', type: 'uint256' }],
        name: 'timestampToWeek',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'token',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'totalSupply',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'amount', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'transfer',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'from', internalType: 'address', type: 'address' },
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'amount', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'transferFrom',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'uint16', type: 'uint16' }],
        name: 'trustedRemoteLookup',
        outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'useCustomAdapterParams',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// OracleMock
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const oracleMockABI = [
    { stateMutability: 'nonpayable', type: 'constructor', inputs: [{ name: '__name', internalType: 'string', type: 'string' }] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: '_name',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'data', internalType: 'bytes', type: 'bytes' }],
        name: 'get',
        outputs: [
            { name: 'success', internalType: 'bool', type: 'bool' },
            { name: '_rate', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'mockValue',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'data', internalType: 'bytes', type: 'bytes' }],
        name: 'name',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'data', internalType: 'bytes', type: 'bytes' }],
        name: 'peek',
        outputs: [
            { name: 'success', internalType: 'bool', type: 'bool' },
            { name: 'rate', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'data', internalType: 'bytes', type: 'bytes' }],
        name: 'peekSpot',
        outputs: [{ name: 'rate', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_rate', internalType: 'uint256', type: 'uint256' }],
        name: 'setRate',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: 'data', internalType: 'bytes', type: 'bytes' }],
        name: 'symbol',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TapiocaOptionBrokerMock
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const tapiocaOptionBrokerMockABI = [
    {
        stateMutability: 'nonpayable',
        type: 'constructor',
        inputs: [
            { name: '_tOLP', internalType: 'address', type: 'address' },
            { name: '_oTAP', internalType: 'address', type: 'address' },
            { name: '_tapOFT', internalType: 'address', type: 'address' },
            { name: '_oracle', internalType: 'contract IOracle', type: 'address' },
            { name: '_paymentTokenBeneficiary', internalType: 'address', type: 'address' },
        ],
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'epoch', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'cumulative', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'averageMagnitude', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'totalParticipants', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'AMLDivergence',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'epoch', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'to', internalType: 'address', type: 'address', indexed: true },
            { name: 'paymentToken', internalType: 'contract IERC20', type: 'address', indexed: true },
            { name: 'oTapTokenID', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'ExerciseOption',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'epoch', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'ExitPosition',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'epoch', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'extractedTAP', internalType: 'uint256', type: 'uint256', indexed: false },
            { name: 'epochTAPValuation', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'NewEpoch',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
            { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
        ],
        name: 'OwnershipTransferred',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'epoch', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'sglAssetID', internalType: 'uint256', type: 'uint256', indexed: true },
            { name: 'totalDeposited', internalType: 'uint256', type: 'uint256', indexed: false },
            {
                name: 'lock',
                internalType: 'struct LockPosition',
                type: 'tuple',
                components: [
                    { name: 'sglAssetID', internalType: 'uint128', type: 'uint128' },
                    { name: 'amount', internalType: 'uint128', type: 'uint128' },
                    { name: 'lockTime', internalType: 'uint128', type: 'uint128' },
                    { name: 'lockDuration', internalType: 'uint128', type: 'uint128' },
                ],
                indexed: false,
            },
            { name: 'discount', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'Participate',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'account', internalType: 'address', type: 'address', indexed: false }],
        name: 'Paused',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'paymentToken', internalType: 'contract IERC20', type: 'address', indexed: false },
            { name: 'oracle', internalType: 'contract IOracle', type: 'address', indexed: false },
            { name: 'oracleData', internalType: 'bytes', type: 'bytes', indexed: false },
        ],
        name: 'SetPaymentToken',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [{ name: 'account', internalType: 'address', type: 'address', indexed: false }],
        name: 'Unpaused',
    },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'claimOwnership', outputs: [] },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_paymentTokens', internalType: 'address[]', type: 'address[]' }],
        name: 'collectPaymentTokens',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'epoch',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'epochTAPValuation',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_oTAPTokenID', internalType: 'uint256', type: 'uint256' },
            { name: '_paymentToken', internalType: 'contract IERC20', type: 'address' },
        ],
        name: 'exerciseOption',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_tOLPTokenID', internalType: 'uint256', type: 'uint256' }],
        name: 'exitPosition',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '_oTAPTokenID', internalType: 'uint256', type: 'uint256' },
            { name: '_paymentToken', internalType: 'contract IERC20', type: 'address' },
        ],
        name: 'getOTCDealDetails',
        outputs: [
            { name: 'eligibleTapAmount', internalType: 'uint256', type: 'uint256' },
            { name: 'paymentTokenAmount', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'lastEpochUpdate',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'newEpoch', outputs: [] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'oTAP',
        outputs: [{ name: '', internalType: 'contract OTAP', type: 'address' }],
    },
    { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'oTAPBrokerClaim', outputs: [] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'oTAPCalls',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'owner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '', internalType: 'address', type: 'address' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'participants',
        outputs: [
            { name: 'hasParticipated', internalType: 'bool', type: 'bool' },
            { name: 'hasVotingPower', internalType: 'bool', type: 'bool' },
            { name: 'averageMagnitude', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_tOLPTokenID', internalType: 'uint256', type: 'uint256' }],
        name: 'participate',
        outputs: [{ name: 'oTAPTokenID', internalType: 'uint256', type: 'uint256' }],
    },
    { stateMutability: 'view', type: 'function', inputs: [], name: 'paused', outputs: [{ name: '', internalType: 'bool', type: 'bool' }] },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'paymentTokenBeneficiary',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'contract IERC20', type: 'address' }],
        name: 'paymentTokens',
        outputs: [
            { name: 'oracle', internalType: 'contract IOracle', type: 'address' },
            { name: 'oracleData', internalType: 'bytes', type: 'bytes' },
        ],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'pendingOwner',
        outputs: [{ name: '', internalType: 'address', type: 'address' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: '_paymentToken', internalType: 'contract IERC20', type: 'address' },
            { name: '_oracle', internalType: 'contract IOracle', type: 'address' },
            { name: '_oracleData', internalType: 'bytes', type: 'bytes' },
        ],
        name: 'setPaymentToken',
        outputs: [],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_paymentTokenBeneficiary', internalType: 'address', type: 'address' }],
        name: 'setPaymentTokenBeneficiary',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '', internalType: 'uint256', type: 'uint256' },
            { name: '', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'singularityGauges',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'tOLP',
        outputs: [{ name: '', internalType: 'contract TapiocaOptionLiquidityProvision', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'tapOFT',
        outputs: [{ name: '', internalType: 'contract TapOFT', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'tapOracle',
        outputs: [{ name: '', internalType: 'contract IOracle', type: 'address' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'tapOracleData',
        outputs: [{ name: '', internalType: 'bytes', type: 'bytes' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'newOwner', internalType: 'address', type: 'address' },
            { name: 'direct', internalType: 'bool', type: 'bool' },
            { name: 'renounce', internalType: 'bool', type: 'bool' },
        ],
        name: 'transferOwnership',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
        name: 'twAML',
        outputs: [
            { name: 'totalParticipants', internalType: 'uint256', type: 'uint256' },
            { name: 'averageMagnitude', internalType: 'uint256', type: 'uint256' },
            { name: 'totalDeposited', internalType: 'uint256', type: 'uint256' },
            { name: 'cumulative', internalType: 'uint256', type: 'uint256' },
        ],
    },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC20Mock
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20MockABI = [
    {
        stateMutability: 'nonpayable',
        type: 'constructor',
        inputs: [
            { name: '_name', internalType: 'string', type: 'string' },
            { name: '_symbol', internalType: 'string', type: 'string' },
            { name: '_initialAmount', internalType: 'uint256', type: 'uint256' },
            { name: '_decimals', internalType: 'uint256', type: 'uint256' },
        ],
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'owner', internalType: 'address', type: 'address', indexed: true },
            { name: 'spender', internalType: 'address', type: 'address', indexed: true },
            { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'Approval',
    },
    {
        type: 'event',
        anonymous: false,
        inputs: [
            { name: 'from', internalType: 'address', type: 'address', indexed: true },
            { name: 'to', internalType: 'address', type: 'address', indexed: true },
            { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
        ],
        name: 'Transfer',
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'DOMAIN_SEPARATOR',
        outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [
            { name: '', internalType: 'address', type: 'address' },
            { name: '', internalType: 'address', type: 'address' },
        ],
        name: 'allowance',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'spender', internalType: 'address', type: 'address' },
            { name: 'amount', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'approve',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'address', type: 'address' }],
        name: 'balanceOf',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'decimals',
        outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [{ name: '_val', internalType: 'uint256', type: 'uint256' }],
        name: 'freeMint',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'name',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [{ name: '', internalType: 'address', type: 'address' }],
        name: 'nonces',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'owner_', internalType: 'address', type: 'address' },
            { name: 'spender', internalType: 'address', type: 'address' },
            { name: 'value', internalType: 'uint256', type: 'uint256' },
            { name: 'deadline', internalType: 'uint256', type: 'uint256' },
            { name: 'v', internalType: 'uint8', type: 'uint8' },
            { name: 'r', internalType: 'bytes32', type: 'bytes32' },
            { name: 's', internalType: 'bytes32', type: 'bytes32' },
        ],
        name: 'permit',
        outputs: [],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'symbol',
        outputs: [{ name: '', internalType: 'string', type: 'string' }],
    },
    {
        stateMutability: 'view',
        type: 'function',
        inputs: [],
        name: 'totalSupply',
        outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'amount', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'transfer',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
    {
        stateMutability: 'nonpayable',
        type: 'function',
        inputs: [
            { name: 'from', internalType: 'address', type: 'address' },
            { name: 'to', internalType: 'address', type: 'address' },
            { name: 'amount', internalType: 'uint256', type: 'uint256' },
        ],
        name: 'transferFrom',
        outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
    },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link vestingABI}__.
 */
export function useVesting(config: Omit<UseContractConfig, 'abi'> = {} as any) {
    return useContract({ abi: vestingABI, ...config });
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link tapiocaOptionBrokerABI}__.
 */
export function useTapiocaOptionBroker(config: Omit<UseContractConfig, 'abi'> = {} as any) {
    return useContract({ abi: tapiocaOptionBrokerABI, ...config });
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link tapiocaOptionLiquidityProvisionABI}__.
 */
export function useTapiocaOptionLiquidityProvision(config: Omit<UseContractConfig, 'abi'> = {} as any) {
    return useContract({ abi: tapiocaOptionLiquidityProvisionABI, ...config });
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link otapABI}__.
 */
export function useOtap(config: Omit<UseContractConfig, 'abi'> = {} as any) {
    return useContract({ abi: otapABI, ...config });
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link tapOftABI}__.
 */
export function useTapOft(config: Omit<UseContractConfig, 'abi'> = {} as any) {
    return useContract({ abi: tapOftABI, ...config });
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link oracleMockABI}__.
 */
export function useOracleMock(config: Omit<UseContractConfig, 'abi'> = {} as any) {
    return useContract({ abi: oracleMockABI, ...config });
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link tapiocaOptionBrokerMockABI}__.
 */
export function useTapiocaOptionBrokerMock(config: Omit<UseContractConfig, 'abi'> = {} as any) {
    return useContract({ abi: tapiocaOptionBrokerMockABI, ...config });
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link erc20MockABI}__.
 */
export function useErc20Mock(config: Omit<UseContractConfig, 'abi'> = {} as any) {
    return useContract({ abi: erc20MockABI, ...config });
}
